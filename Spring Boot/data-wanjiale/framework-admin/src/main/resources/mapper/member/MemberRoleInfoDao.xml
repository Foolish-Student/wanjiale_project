<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.framework.modules.member.dao.MemberRoleInfoDao">

    <resultMap type="com.framework.modules.member.entity.MemberRoleInfoEntity" id="roleInfoMap">
        <result property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleRemark" column="role_remark"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateBy" column="update_by"/>
    </resultMap>

    <select id="selectById"  resultType="com.framework.modules.member.entity.MemberRoleInfoEntity">
        select * from t_member_role_info where  role_id=#{roleId}
    </select>
    <insert id="insert" parameterType="com.framework.modules.member.entity.MemberRoleInfoEntity">
        INSERT INTO t_member_role_info
        ( role_id,role_name, role_remark, STATUS, create_time, update_time, create_by, update_by )
        VALUES
        (
            #{roleId},
            #{roleName},
            #{roleRemark},
            1,
            sysdate( ),
            SYSDATE( ),
            'system',
            'system'
        );
    </insert>

    <update id="updateAllColumnById" parameterType="com.framework.modules.member.entity.MemberRoleInfoEntity">
        UPDATE t_member_role_info
        SET  role_name = #{roleName} , role_remark = #{roleRemark},STATUS = #{status} , create_time = sysdate( ) , update_time =sysdate( ),create_by=#{createBy},update_by=#{updateBy}
        WHERE   role_id=#{roleId} ;
    </update>

    <delete id="deleteBatchIds"  parameterType="java.util.List">
        DELETE t from t_member_role_info t
        WHERE 1=1
        <if test="roleIds != null and roleIds.size > 0">
            AND role_id IN
            <foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")" >
                #{item}
            </foreach>
        </if>
    </delete>

    <update id="enableBatchIds"  parameterType="java.util.List">
        UPDATE t_member_role_info SET STATUS = 1 , update_time=sysdate( )
        WHERE 1=1
        <if test="roleIds != null and roleIds.size > 0">
            AND role_id IN
            <foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")" >
                #{item}
            </foreach>
        </if>
    </update>

    <update id="disableBatchIds"  parameterType="java.util.List">
        UPDATE t_member_role_info SET STATUS = 2 , update_time=sysdate( )
        WHERE 1=1
        <if test="roleIds != null and roleIds.size > 0">
            AND role_id IN
            <foreach collection="roleIds" index="index" item="item" open="(" separator="," close=")" >
                #{item}
            </foreach>
        </if>
    </update>

    <select id="queryPageList" parameterType="java.util.Map" resultMap="roleInfoMap">
        SELECT
        *
        FROM
        t_member_role_info t
        WHERE
        1=1

        <if test="roleName != null and roleName != ''">
            AND t.role_name  like concat('%',#{roleName},'%')
        </if>
        <if test="status != null and status != ''">
            AND t.status = #{status}
        </if>
        ORDER BY t.update_time  DESC limit #{start}, #{limit}

    </select>

    <select id="queryCount" parameterType="java.util.Map" resultType="int">
        SELECT
        count(role_id)
        FROM
        t_member_role_info t
        WHERE
        1=1

        <if test="roleName != null and roleName != ''">
            AND t.role_name  like concat('%',#{roleName},'%')
        </if>
        <if test="status != null and status != ''">
            AND t.status = #{status}
        </if>

    </select>
</mapper>